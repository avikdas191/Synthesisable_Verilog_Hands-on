//  This code was originally generated by Terasic System Builder
//  then amended by AK for brewity
`default_nettype none // disallow associting new names with wires
module DE10_Lite_top( 
// keep the ports declaration below and use these names in your design
	input 				ADC_CLK_10, MAX10_CLK1_50, MAX10_CLK2_50, 	// CLOCK
	output	[7:0] 	HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, 		// SEG7, 6 pcs
	input		[1:0]		KEY,	// inverted push buttons, 2 pcs				
	output	[9:0]		LEDR,	// red LEDs, 10 pcs
	input 	[9:0]		SW	// slide switches, 10 pcs
);

//  do_not_remove_code BEGIN
	wire [1:0] KEYn = ~KEY; // KEYn is 1 when the button is pressed, use it
	assign LEDR = SW;
	
// END of do_not_remove_code

// all_your_HDL_code BEGIN
	// blank out the unused displays - comment the one YOU need to use (here HEX3)
//		assign HEX5 = 8'b_1111_1111;
		assign HEX4 = 8'b_1111_1111;
		assign HEX2 = 8'b_1111_1111;
		assign HEX3 = 8'b_1111_1111;
		assign HEX1 = 8'b_1111_1111;
//		assign HEX0 = 8'b_1111_1111;
		

	SevSeg SevSeg_1 ( .HEX_disp (SW[6:3]), .segments (HEX5) );	
	
	wire [7:0] SevSeg_2_out;
	
	SevSeg SevSeg_2 ( .HEX_disp (SW[6:3]), .segments (SevSeg_2_out) );	
	//	assign HEX0 = ( |KEYn ) ? SevSeg_2_out : 8'b_1111_1111;

	reg [7:0] r_7LED; // for LHS of the procedural block
	
	always @(*) begin 
		if ( |KEYn )
			r_7LED = SevSeg_2_out;
		else
			r_7LED = 8'b_1111_1111;	
	end
	
	assign HEX0 = r_7LED; // to drive the output port
	
// END of all_your_HDL_code

endmodule
