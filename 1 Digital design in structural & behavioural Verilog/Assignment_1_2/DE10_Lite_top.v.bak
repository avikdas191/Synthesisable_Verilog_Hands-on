//  This code was originally generated by Terasic System Builder
//  then amended by AK
 
`default_nettype none // disallow associating new names with undeclared wires

module DE10_Lite_top( 
// keep the port declarations below (defined in the QSF file) and use these names in your design
	input 				ADC_CLK_10, MAX10_CLK1_50, MAX10_CLK2_50, 	// CLOCK
	output	[7:0] 	HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, 			// SEG7, 6 pcs
	input		[1:0]		KEY,														// inverted push buttons, 2 pcs				
	output	[9:0]		LEDR,														// red LEDs, 10 pcs
	input 	[9:0]		SW															// slide switches, 10 pcs
);


// *** DO NOT EDIT THE CODE BELOW
	
	assign LEDR = SW;						// display waht is entered by SW (this design uses SW[9] only)

	assign HEX5[6:0] 	= 7'b_111_1111;				// switch OFF the HEXes	
	assign HEX4 		= 8'b_1111_1111;	
	assign HEX3[7:1] 	= 7'b_111_1111;	
	assign HEX2 		= 8'b_1111_1111;	
	assign HEX1 		= 8'b_1111_1111;
	assign HEX0[7:4]	= 4'b_1111;
	assign HEX0[2:0]	= 3'b_111;
	
// *** DO NOT EDIT THE CODE ABOVE																				



// *****************************************************************
// FOR THIS LAB USE: SW[w-1:0], SW[9], KEY[1] and KEY[0] as inputs; HEX5[7], HEX3[0] and HEX0[3] as outputs (1 for OFF)
// For your structural design: 
//				- declare the necessary wires first (outputs of G1 and G2; output ports can be used as inputs to gates); 
//				- provide one line of Verilog for every gate (5 gates then 5 lines)
// PUT ALL YOUR CODE BELOW THIS LINE

//	example code to give you some ideas (delete after developing your code)
	// do not forget to list ALL the individual bits coming to a gate
	nand g1( HEX5[7], SW[9], SW[3], SW[2], SW[1], SW[0]); 			// ON only when all the listed switches are up
	or  g2( HEX3[0], KEY[1], KEY[0] );								// ON only when both KEY are hold
	xor g3( HEX0[3], KEY[1], KEY[0] );								// ON when KEY are the same

	
// PUT ALL YOUR CODE ABOVE THIS LINE
// *****************************************************************


endmodule
